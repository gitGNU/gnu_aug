#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.56)
#AC_INIT([src/auglocal.h.in])
AC_INIT([aug], [trunk], [mark.aylett@gmail.com])

#AM_INIT_AUTOMAKE([aug], [trunk], [mark.aylett@gmail.com])
AM_INIT_AUTOMAKE()
AC_CONFIG_HEADER([src/auglocal.h])
AM_MAINTAINER_MODE

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

AC_ARG_ENABLE(multicast,
[  --enable-multicast      enable multicast support @<:@default=yes@:>@], [
    case x$enableval in
        xyes) enable_multicast=yes;;
        xno)  enable_multicast=no;;
        *) AC_MSG_ERROR(bad value $enableval for --enable-multicast);;
    esac
], [enable_multicast=yes])
AM_CONDITIONAL(ENABLE_MULTICAST, test x$enable_multicast = xyes)
if test x$enable_multicast = xyes; then
    AC_DEFINE(ENABLE_MULTICAST, 1, [Define to 1 for multicast support.])
fi

AC_ARG_ENABLE(python,
[  --enable-python         enable python support @<:@default=no@:>@], [
    case x$enableval in
        xyes) enable_python=yes;;
        xno)  enable_python=no;;
        *) AC_MSG_ERROR(bad value $enableval for --enable-python);;
    esac
], [enable_python=no])
AM_CONDITIONAL(ENABLE_PYTHON, test x$enable_python = xyes)
if test x$enable_python = xyes; then
    AC_DEFINE(ENABLE_PYTHON, 1, [Define to 1 for python support.])
fi

AC_ARG_ENABLE(ruby,
[  --enable-ruby           enable ruby support @<:@default=no@:>@], [
    case x$enableval in
        xyes) enable_ruby=yes;;
        xno)  enable_ruby=no;;
        *) AC_MSG_ERROR(bad value $enableval for --enable-ruby);;
    esac
], [enable_ruby=no])
AM_CONDITIONAL(ENABLE_RUBY, test x$enable_ruby = xyes)
if test x$enable_ruby = xyes; then
    AC_DEFINE(ENABLE_RUBY, 1, [Define to 1 for ruby support.])
fi

AC_ARG_ENABLE(smp,
[  --enable-smp            enable smp support @<:@default=yes@:>@], [
    case x$enableval in
        xyes) enable_smp=yes;;
        xno)  enable_smp=no;;
        *) AC_MSG_ERROR(bad value $enableval for --enable-smp);;
    esac
], [enable_smp=yes])
AM_CONDITIONAL(ENABLE_SMP, test x$enable_smp = xyes)
if test x$enable_smp = xyes; then
    AC_DEFINE(ENABLE_SMP, 1, [Define to 1 for smp support.])
fi

AC_ARG_ENABLE(ssl,
[  --enable-ssl            enable ssl support @<:@default=yes@:>@], [
    case x$enableval in
        xyes) enable_ssl=yes;;
        xno)  enable_ssl=no;;
        *) AC_MSG_ERROR(bad value $enableval for --enable-ssl);;
    esac
], [enable_ssl=yes])
AM_CONDITIONAL(ENABLE_SSL, test x$enable_ssl = xyes)
if test x$enable_ssl = xyes; then
    AC_DEFINE(ENABLE_SSL, 1, [Define to 1 for ssl support.])
fi

AC_ARG_ENABLE(strict,
[  --enable-strict         enable strict support @<:@default=no@:>@], [
    case x$enableval in
        xyes) enable_strict=yes;;
        xno)  enable_strict=no;;
        *) AC_MSG_ERROR(bad value $enableval for --enable-strict);;
    esac
], [enable_strict=no])
AM_CONDITIONAL(ENABLE_STRICT, test x$enable_strict = xyes)
if test x$enable_strict = xyes; then
    AC_DEFINE(ENABLE_STRICT, 1, [Define to 1 for strict types.])
fi

AC_ARG_ENABLE(threads,
[  --enable-threads        enable threads support @<:@default=yes@:>@], [
    case x$enableval in
        xyes) enable_threads=yes;;
        xno)  enable_threads=no;;
        *) AC_MSG_ERROR(bad value $enableval for --enable-threads);;
    esac
], [enable_threads=yes])
AM_CONDITIONAL(ENABLE_THREADS, test x$enable_threads = xyes)
if test x$enable_threads = xyes; then
    AC_DEFINE(ENABLE_THREADS, 1, [Define to 1 for threads support.])
fi

# Checks for libraries.

LDFLAGS="-lm $LDFLAGS"

if test x$enable_threads = xyes; then
   CFLAGS="-D_MT -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS $CFLAGS"
   CXXFLAGS="-D_MT -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS $CXXFLAGS"
fi

case $host in
*-*-cygwin*|*-*-mingw*)

    # cp c:/WINNT/system32/ssleay32.dll c:/WINNT/system32/libssleay32.dll 
    # cd c:/OpenSSL/lib/MinGW/
    # cp ssleay32.a libssleay32.a
    # cp lib*.a /lib/mingw/

    if test x$enable_ssl = xyes; then
        AC_SEARCH_LIBS(SSL_library_init, [ssleay32])
        AC_SEARCH_LIBS(BIO_new, [eay32])
    fi

    CFLAGS="-DWINVER=0x0501 -DFD_SETSIZE=256 -D__USE_W32_SOCKETS $CFLAGS"
    CXXFLAGS="-DWINVER=0x0501 -DFD_SETSIZE=256 -D__USE_W32_SOCKETS $CXXFLAGS"
    LIBS="-Wl,-lws2_32 $LIBS"

    if test x$enable_multicast = xyes; then
        LIBS="-Wl,-liphlpapi $LIBS"
    fi

    if test x$enable_threads = xyes; then
        CFLAGS="-mthreads $CFLAGS"
        CXXFLAGS="-mthreads $CXXFLAGS"
        LDFLAGS="-mthreads $LDFLAGS"
    fi
    ;;
*)
    if test x$enable_ssl = xyes; then
        AC_SEARCH_LIBS(SSL_library_init, [ssl])
        AC_SEARCH_LIBS(BIO_new, [crypto])
    fi

    AC_SEARCH_LIBS(gethostbyname, nsl)
    AC_SEARCH_LIBS(gethostname, nsl)
    AC_SEARCH_LIBS(socket, socket)
    AC_SEARCH_LIBS(dlopen, [dl dlcompat])

    if test x$enable_threads = xyes; then
        AC_SEARCH_LIBS(pthread_create, [pthread])
    fi
    ;;
esac

# Checks for libraries.

# Checks for header files.
AC_FUNC_ALLOCA
AC_CHECK_HEADERS([dlfcn.h sys/sockio.h openssl/err.h openssl/ssl.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN

AC_MSG_CHECKING(for socklen_t)
AC_TRY_COMPILE([
#include <sys/types.h>
#if !defined(_WIN32)
# include <sys/socket.h>
# include <unistd.h>
#else /* _WIN32 */
# include <winsock2.h>
#endif /* _WIN32 */
socklen_t x;
], [], [AC_MSG_RESULT(yes)], [
    AC_TRY_COMPILE([
#include <sys/types.h>
#if !defined(_WIN32)
# include <sys/socket.h>
#else /* _WIN32 */
# include <winsock2.h>
#endif /* _WIN32 */
int accept(int, struct sockaddr*, size_t*);
    ], [], [
        AC_MSG_RESULT(size_t)
        AC_DEFINE(socklen_t, size_t, [socklen_t size])
    ], [
        AC_MSG_RESULT(int)
        AC_DEFINE(socklen_t, int, [socklen_t size])
    ])
])

AC_MSG_CHECKING(for ipv6)
AC_TRY_COMPILE([
    # include <sys/types.h>
    #if !defined(_WIN32)
    # include <sys/socket.h>
    # include <netinet/in.h>
    # include <arpa/inet.h>
    # include <netdb.h>
    #else /* _WIN32 */
    # include <winsock2.h>
    # include <ws2tcpip.h>
    #endif /* _WIN32 */
    int x = IPV6_ADD_MEMBERSHIP;
], [], [
	AC_MSG_RESULT(yes)
	AC_DEFINE(HAVE_IPV6, 1, [Define to 1 if you have ipv6 support.])
], [
	AC_MSG_RESULT(no)
])

AC_MSG_CHECKING(whether the compiler supports __func__)
AC_TRY_COMPILE([
const char*
func()
{
    return __func__;
}
], [], [
    AC_MSG_RESULT(yes)
], [
    AC_MSG_RESULT(no)
    AC_MSG_CHECKING(whether the compiler supports __FUNCTION__)
    AC_TRY_COMPILE([
const char*
func()
{
    return __FUNCTION__;
}
    ], [], [
        AC_MSG_RESULT(yes)
        AC_DEFINE(__func__, __FUNCTION__,
            [Define to the equivalent of __func__])
    ], [
        AC_MSG_RESULT(no)
        AC_DEFINE(__func__, "unknown",
            [Define to the equivalent of __func__])
    ])
])

# Checks for library functions.
AC_CHECK_FUNCS([bzero localtime_r poll strlcpy timegm])

AC_CONFIG_FILES([Makefile
                 doc/Makefile
                 doc/man/Makefile
                 etc/Makefile
                 example/Makefile
                 example/augas/Makefile
                 example/augas/etc/Makefile
                 example/augas/htdocs/Makefile
                 example/cpp/Makefile
                 src/Makefile
                 src/c/Makefile
                 src/c/augctx/Makefile
                 src/c/augctx/posix/Makefile
                 src/c/augctx/win32/Makefile
                 src/c/augext/Makefile
                 src/c/augmar/Makefile
                 src/c/augnet/Makefile
                 src/c/augpy/Makefile
                 src/c/augrb/Makefile
                 src/c/augres/Makefile
                 src/c/augas/Makefile
                 src/c/augsrv/Makefile
                 src/c/augsrv/posix/Makefile
                 src/c/augsrv/win32/Makefile
                 src/c/augsys/Makefile
                 src/c/augsys/osx/Makefile
                 src/c/augsys/posix/Makefile
                 src/c/augsys/win32/Makefile
                 src/c/augutil/Makefile
                 src/c/augutil/posix/Makefile
                 src/c/augutil/win32/Makefile
                 src/c/htdigest/Makefile
                 src/c/mar/Makefile
                 src/cpp/Makefile
                 src/cpp/augctxpp/Makefile
                 src/cpp/augmarpp/Makefile
                 src/cpp/augnetpp/Makefile
                 src/cpp/augaspp/Makefile
                 src/cpp/augsrvpp/Makefile
                 src/cpp/augsyspp/Makefile
                 src/cpp/augutilpp/Makefile
                 src/cpp/daug/Makefile
                 src/cpp/daug/test/Makefile
                 src/pl/Makefile
                 src/py/Makefile
                 src/rb/Makefile
                 src/sh/Makefile
                 vc7/Makefile])
AC_OUTPUT
