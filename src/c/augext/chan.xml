<!--
  Copyright (c) 2004, 2005, 2006, 2007, 2008, 2009 Mark Aylett <mark.aylett@gmail.com>

  This file is part of Aug written by Mark Aylett.

  Aug is released under the GPL with the additional exemption that compiling,
  linking, and/or using OpenSSL is allowed.

  Aug is free software; you can redistribute it and/or modify it under the
  terms of the GNU General Public License as published by the Free Software
  Foundation; either version 2 of the License, or (at your option) any later
  version.

  Aug is distributed in the hope that it will be useful, but WITHOUT ANY
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  details.

  You should have received a copy of the GNU General Public License along with
  this program; if not, write to the Free Software Foundation, Inc., 51
  Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-->

<package name="aug" dir="augext">

  <quotincl>augtypes.h</quotincl>

  <verbatim>struct aug_errinfo;</verbatim>

  <verbatim>
#define AUG_MAXCHANNAMELEN 255
  </verbatim>

  <interface name="chandler">

    <method name="auth" type="aug_bool" qname="authchan">
      <param name="id" type="aug_id"/>
      <param name="subject" type="const char*"/>
      <param name="issuer" type="const char*"/>
    </method>

    <method name="clear" type="void" qname="clearchan">
      <param name="id" type="aug_id"/>
    </method>

    <method name="error" type="void" qname="errorchan">
      <param name="chan" type="aug_chan" object="true"/>
      <param name="errinfo" type="const struct aug_errinfo&" />
    </method>

    <method name="estab" type="aug_bool" qname="estabchan">
      <param name="chan" type="aug_chan" object="true"/>
      <param name="parent" type="aug_id"/>
    </method>

    <method name="ready" type="aug_bool" qname="readychan">
      <param name="chan" type="aug_chan" object="true"/>
      <param name="events" type="unsigned short"/>
    </method>

  </interface>

  <interface name="chan">

    All channels have non-blocking semantics.

    <method name="close" type="aug_result" qname="closechan"/>

    <method name="process_BI" type="aug_chan" object="true" verify="true" qname="processchan_BI">
      <param name="handler" type="aug_chandler" object="true"/>
      <param name="fork" type="aug_bool&"/>
    </method>

    <method name="setwantwr" type="aug_result" qname="setchanwantwr">
      <param name="wantwr" type="aug_bool"/>
    </method>

    <method name="getid" type="aug_id" qname="getchanid"/>

    <method name="getname" type="char*" verify="true" qname="getchanname">
      <param name="dst" type="char*"/>
      <param name="size" type="unsigned"/>
    </method>

    <method name="isready" type="aug_bool" qname="ischanready"/>

  </interface>

</package>
